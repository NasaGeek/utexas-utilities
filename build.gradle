buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://raw.github.com/xujiaao/mvn-repository/master/releases' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.google.gms:google-services:1.3.0-beta1'
        classpath 'com.github.xujiaao:aarLinkSources:1.0.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'


repositories {
    maven { url 'http://dl.bintray.com/populov/maven' }
    mavenCentral()
}

// Some constant information you could use in builds, accessible via BuildConfig.<field-name>
//def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion 23
    buildToolsVersion "23"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 41
        versionName "1.99.9"

        // The git sha of the current head and build time
        //buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            manifest.srcFile 'AndroidManifest.xml'
        }
        debug {
            res.srcDirs = ['res-debug']
        }
    }
    // TODO: You can put sensitive keystore data in an untracked .properties file or ENV variables
    // Example: http://stackoverflow.com/a/20872275/3034339
    signingConfigs {
        release {
            storeFile file('keystore-file-here')
            storePassword ''
            keyAlias ''
            keyPassword ''
        }
    }
    buildTypes {
        debug {
            // Can add package and versionName suffixes, makes it easier to differentiate if you have play store and debug builds installed
            versionNameSuffix "-debug"
        }
        // Release build task. Uses the release signing config above for signing it
        // To run from command line, use './gradlew.bat assembleRelease' from project root
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
        }
    }
}

apply plugin: 'aar-link-sources'

dependencies {
    compile 'com.google.maps.android:android-maps-utils:0.4'

    compile 'com.android.support:support-v4:22.1.+'
    aarLinkSources 'com.android.support:support-v4:21.0.+:sources@jar'
    compile 'com.android.support:appcompat-v7:23.0.1'
    aarLinkSources 'com.android.support:support-v7:23.0.1:sources@jar'

    compile 'com.google.android.gms:play-services-analytics:7.8.0'
    compile 'com.google.android.gms:play-services-base:7.8.0'
    compile 'com.google.android.gms:play-services-maps:7.8.0'

    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.viewpagerindicator:library:2.4.1@aar'
    aarLinkSources 'com.viewpagerindicator:library:2.4.1:sources@jar'
    compile('ch.acra:acra:4.6.2') {
        exclude group: 'org.json'
    }

    compile fileTree(dir: 'libs', include: ['*.jar'])
}
